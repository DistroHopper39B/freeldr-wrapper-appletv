LOW MEMORY:
Memory regions of the firmware as dumped from VirtualBox (may be inaccurate)
0x0-0x17: DE C0 AD BA 00 20 01 02 10 17 00 00 30 00 00 00 01 00 00 00 10 CF 15 02 (IVT, unknown meaning, probably unimportant)
0xA1F-0xA2F: E0 00 14 00 00 00 05 00 00 D0 02 00 00 20 00 00 00 (IVT, unknown meaning, probably unimportant)
0xA30-???: Command line args, not sure why they are here
0x9FFF0-0x9FFFA: 5F 4D 50 5F 20 13 0E 00 01 04 5F (_MP_....._) - This is part of the EBDA, unlikely to be important.
0xC0000-0xC7FFF: VirtualBox VGA BIOS (standard for https://wiki.osdev.org/Memory_Map_(x86))
0xE1001-0xE13FF: BIOS Expansions region, looks like SMBIOS/DMI although it's a bit too low for that.

HIGH MEMORY:
0x00100000-0x02000000 (1M-32M): Empty space; used by atv-bootloader as space for the kernel and initramfs. This must have been why I had issues loading large initramfs (like Debians); the devs must not have anticipated this combination being larger than 31M. 
0x02000000-0x020095FB (latter CANNOT be assumed): mach_kernel (seemingly 8192 bytes larger than binary itself; otool might give me a clue here)
0x0200A000-0x0200A468: Mach boot struct
     A000: rev = 4
     A002: ver = 1
     A004: cmdline[1024]
     A404: efi_mem_map = 0x02012000 (ptr?)
     A408: efi_mem_map_size = 0x00001710
     ...etc
0x0200B000-0x025FC6C2: Seems to contain the UEFI firmware along with memory map, nvram etc. 0x025FC6C2 is nearly 40MB which is close to the unusable memory under Linux, so this area probably can't be wiped either.
